{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","name","id","email","className","src","alt","CardList","props","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","componentDidMount","fetch","then","res","json","data","setState","catch","err","console","error","e","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACbC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,GAAGC,EAASH,EAATG,MACf,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BH,EAA1B,0BAAsDI,IAAI,KAClE,6BAAKL,IACL,4BAAIE,SCLGI,EAAW,SAAAC,GAAU,IACzBC,EAAYD,EAAZC,SAEP,OACE,qBAAKL,UAAU,YAAf,SACCK,EAASC,KAAI,SAAAV,GAAO,OACf,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQE,UCFfS,G,MANG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,aAAaC,EAAiB,EAAjBA,YAC/B,OACE,uBAAOT,UAAU,SAASU,KAAK,SAASD,YAAaA,EAAaE,SAAUH,MCwCjEI,E,kDApCb,aAAe,IAAD,8BACZ,gBAQFC,kBAAoB,WAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACd,SAAUa,OACtCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAbhB,EAgBdV,SAAW,SAAAa,GACT,EAAKL,SAAS,CAACM,YAAaD,EAAEE,OAAOC,SAfrC,EAAKC,MAAQ,CACXvB,SAAU,GACVoB,YAAa,IAJH,E,qDAqBL,IAAD,EAC2BI,KAAKD,MAA9BvB,EADF,EACEA,SAASoB,EADX,EACWA,YACXK,EAAmBzB,EAAS0B,QAAO,SAAAnC,GAAO,OAAIA,EAAQC,KAAKmC,cAAcC,SAASR,EAAYO,kBAEpG,OACE,sBAAKhC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,8BACA,cAAC,EAAD,CAAWS,YAAY,kBAAkBD,aAAcqB,KAAKlB,WAC5D,cAAC,EAAD,CAAUN,SAAUyB,W,GA9BVI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c42d0ffb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.css';\r\n\r\nexport const Card = ({monster}) => {\r\n  const {name,id,email} = monster;\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${id}?set=set2&size=180x180`} alt=\"\"/>\r\n      <h1>{name}</h1>\r\n      <p>{email}</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './card-list.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n  const {monsters} = props;\r\n\r\n  return (\r\n    <div className=\"card-list\"> \r\n    {monsters.map(monster => (\r\n          <Card  key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n  ); \r\n}","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nconst SearchBox = ({handleChange,placeholder}) => {\r\n  return (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React,{Component} from 'react';\nimport './App.css';\n\n\n// components //\nimport {CardList} from './components/card-list/card-list.component';\nimport SearchBox from './components/search box/search-box.component';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  // fetching data form jsonplaceholder //\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(data => this.setState({monsters: data}))\n    .catch(err => console.error(err));\n  }\n  \n  onChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n  render(){\n    const { monsters,searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={this.onChange} />\n        <CardList monsters={filteredMonsters}> \n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}